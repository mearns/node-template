name: Build and Test

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 12
          registry-url: https://registry.npmjs.org/
      - name: Extract base version
        uses: sergeysova/jq-action@v2
        id: base-version
        with:
          cmd: jq --raw-output .version package.json
      - name: Determine version string
        uses: ./.github/actions/determine-version
        id: version
        with:
          base-version: ${{ steps.base-version.outputs.value }}
      - name: Update package.json
        run: |2
            npm --no-git-tag-version version "${{ steps.version.outputs.version }}"
      - name: Find version
        id: find-version
        run: |2
          echo "::set-output name=version-line::$( grep -n '"version"' package.json | awk 'BEGIN { FS = ":" } ; { print $1 }' )"
      - name: Report Version
        uses: LouisBrunner/checks-action@v1.1.1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          name: Version
          conclusion: neutral
          output: |2
            {
              "summary": "Unique version string created",
              "text_description": "The version string for this build has been set to **${{ steps.version.outputs.version }}** on line *${{ steps.find-version.outputs.version-line }}*"
            }
          annotations: |2
            [
              {
                "path": "package.json",
                "start_line": ${{ steps.find-version.outputs.version-line }},
                "end": ${{ steps.find-version.outputs.version-line }},
                "annotation_level": "notice",
                "message": "Version number for build set to ${{ steps.version.outputs.version }}",
                "title": "Build version",
                "raw_details": "{ \"version\": \"${{ steps.version.outputs.version }}\" }"
              }
            ]
      - name: Install Dependencies
        run: npm ci
      - name: Build
        env:
          NODE_ENV: production
        run: npm run build
      - name: Clean Dev Dependencies
        run: |2
          rm -rf node_modules/
          npm ci --production
          mkdir -p node_modules/
          mkdir -p dist/
      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: package
          path: |2
            package.json
            dist/

  check:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 12
          registry-url: https://registry.npmjs.org/
      - name: Download package
        uses: actions/download-artifact@v2
        with:
          name: package
      - name: Install dev dependencies
        run: npm ci
      - name: Check Code
        run: npm run check

  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Add status
        id: add-status
        uses: LouisBrunner/checks-action@v1.1.1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          name: Unit Tests
          status: in_progress
          output: |2
            {
              "summary": "Unit tests are currently being run"
            }
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 12
          registry-url: https://registry.npmjs.org/
      - name: Download package
        uses: actions/download-artifact@v2
        with:
          name: package
      - name: Install dev dependencies
        run: npm ci
      - name: Run tests
        run: npm run test
      - name: Summarize tests
        uses: sergeysova/jq-action@v2
        id: summary
        with:
          cmd: |2
            cat reports/unit-tests/data.json | jq --raw-output '
              "Test suites: "
              + "<span style=\"color:green\">" + (.numPassedTestSuites|tostring) + " passed</span> | "
              + "<span style=\"color:red\">" + ((.numFailedTestSuites + .numRuntimeErrorTestSuites)|tostring) + " failed</span> | "
              + "<span style=\"color:yellow\">" + (.numPendingTestSuites|tostring) + " incomplete</span>\n"
              + "\n"
              + "Tests: "
              + "<span style=\"color:green\">" + (.numPassedTests|tostring) + " passed</span> | "
              + "<span style=\"color:red\">" + (.numFailedTests|tostring) + " failed</span> | "
              + "<span style=\"color:yellow\">" + ((.numPendingTests + .numTodoTests)|tostring) + " incomplete</span>\n"
              ' | sed -e 's/"/\\"/g'
      - name: Add status
        uses: LouisBrunner/checks-action@v1.1.1
        if: ${{ success() }}
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          check_id: ${{ steps.add-status.outputs.check_id }}
          status: completed
          conclusion: success
          output: |2
            {
              "summary": "Unit tests completed successfully",
              "text_description": "${{ steps.summary.outputs.value }}"
            }
