name: Determine Version
author: Brian Mearns

description: Determine the version string to use based on a base version, the git branch, and the current run.

branding:
  icon: bookmark
  color: purple

inputs:
  base-version:
    description: >2
      The base version string. This should be a semver string. The patch version will generally be overwritten
      and the prerelease string, may be modified (or created, if it doesn't exist yet).
    required: true

outputs:
  version:
    description: Your new version string.
    value: ${{ steps.generate-version-string.outputs.version }}

runs:
  using: composite
  steps:
    - name: Determine version
      shell: bash
      id: generate-version-string
      env:
        BASE_VERSION: ${{ inputs.base-version }}
      run: |2
        echo "Starting with base version ${BASE_VERSION}"
        echo "Using github run id: ${GITHUB_RUN_NUMBER}"
        echo "Using github ref: ${GITHUB_REF}"
        MAJOR_VERSION=$( echo "$BASE_VERSION" | sed -E 's/([0-9]+)\..*/\1/' )
        MINOR_VERSION=$( echo "$BASE_VERSION" | sed -E 's/[0-9]+\.([0-9]+)\..*/\1/' )
        PATCH_VERSION=$( echo "$BASE_VERSION" | sed -E 's/[0-9]+\.[0-9]+\.([0-9]+).*/\1/' )
        PRE_RELEASE=$( echo "$BASE_VERSION" | sed -E 's/[0-9.]+(-[^+]+)?.*/\1/' )
        META=$( echo "$BASE_VERSION" | sed -E 's/[0-9.]+(-[^+]+)?(\+.*)?/\2/' )

        PATCH_VERSION=$GITHUB_RUN_NUMBER
        if [ "$GITHUB_REF" = "refs/heads/master" ]
        then
            PRE_RELEASE="${PRE_RELEASE:--}${PRE_RELEASE:+.}dev"
        elif [[ "$GITHUB_REF" =~ ^refs/heads/.*$ ]]
        then
            BRANCH_SLUG=$( echo "$GITHUB_REF" | sed -E 's/^refs\/heads\/(.*)/\1/' | sed -E 's/[^a-zA-Z0-9_-]/-/g' )
            PRE_RELEASE="${PRE_RELEASE:--}${PRE_RELEASE:+.}blood.branch.${BRANCH_SLUG}"
        else
            REF_TYPE=$( echo "$GITHUB_REF" | sed -E 's/^refs\/(^[\/]*)\/.*/\1/' )
            SLUG=$( echo "$GITHUB_REF" | sed -E 's/^refs\/^[\/]*\/(.*)/\1/' | sed -E 's/[^a-zA-Z0-9_-]/-/g' )
            PRE_RELEASE="${PRE_RELEASE:--}${PRE_RELEASE:+.}blood.${REF_TYPE}.${SLUG}"
        fi
        VERSION="$MAJOR_VERSION.$MINOR_VERSION.$PATCH_VERSION$PRE_RELEASE$META"
        echo "Determined version: $VERSION"
        echo "::set-output name=version::$VERSION"
